<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Design Pattern - 标签 -</title><link>https://leni.fun/tags/design-pattern/</link><description>Design Pattern - 标签 -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dujianghui_work@163.com (都将会)</managingEditor><webMaster>dujianghui_work@163.com (都将会)</webMaster><lastBuildDate>Tue, 08 Aug 2023 15:00:51 +0800</lastBuildDate><atom:link href="https://leni.fun/tags/design-pattern/" rel="self" type="application/rss+xml"/><item><title>🚩Design Pattern - 设计模式</title><link>https://leni.fun/design-pattern/</link><pubDate>Tue, 08 Aug 2023 15:00:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/design-pattern/</guid><description><![CDATA[<h3 id="principle-原则-x-6">Principle 原则 x 6</h3>
<ol>
<li>Open Close 开闭原则：对扩展开放，对修改关闭（通过接口和抽象类）</li>
<li>Liskov Substitution 里氏代换：子类可替换父类</li>
<li>Dependence Inversion 依赖倒转：针对接口编程，依赖于抽象而非具体</li>
<li>Interface Segregation 接口隔离： 多个隔离的接口优于单个接口，以解耦合</li>
<li>Demeter 迪米特：最少知道原则，实体间减少相互作用，模块独立</li>
<li>Composite Reuse 合成复用：用聚合，而非继承。</li>
</ol>]]></description></item></channel></rss>