<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Java - 标签 -</title><link>https://leni.fun/tags/java/</link><description>Java - 标签 -</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>dujianghui_work@163.com (都将会)</managingEditor><webMaster>dujianghui_work@163.com (都将会)</webMaster><lastBuildDate>Tue, 08 Aug 2023 15:34:51 +0800</lastBuildDate><atom:link href="https://leni.fun/tags/java/" rel="self" type="application/rss+xml"/><item><title>🚩Tomcat</title><link>https://leni.fun/tomcat/</link><pubDate>Tue, 08 Aug 2023 15:34:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/tomcat/</guid><description>&lt;h3 id="tomcat-定义">Tomcat 定义&lt;/h3>
&lt;p>Tomcat = HTTP 服务器 + Servlet 容器，是一个Web容器&lt;/p></description></item><item><title>Java 杂记</title><link>https://leni.fun/java_draft/</link><pubDate>Tue, 08 Aug 2023 15:26:34 +0800</pubDate><author>都将会</author><guid>https://leni.fun/java_draft/</guid><description>草稿太多，有空再整理吧。。</description></item><item><title>《Java8实战》笔记</title><link>https://leni.fun/java8%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</link><pubDate>Tue, 08 Aug 2023 15:20:42 +0800</pubDate><author>都将会</author><guid>https://leni.fun/java8%E5%AE%9E%E6%88%98%E7%AC%94%E8%AE%B0/</guid><description><![CDATA[<h2 id="一基础知识">一、基础知识</h2>
<h3 id="1-函数式编程">1. 函数式编程</h3>
<ul>
<li><strong>函数式编程</strong>中的<strong>函数</strong>的主要意思是“把函数作为一等值”，不过它也常常隐含着第二层意思，即“执行时在元素之间无互动”。</li>
<li>引用透明性——“没有可感知的副作用”
<ul>
<li>不改变对调用者可见的变量。返回的结果基于参数却没有修改任何一个传入的参数</li>
<li>不进行I/O</li>
<li>不抛出异常</li>
<li>选择使用引用透明的函数</li>
</ul>
</li>
<li>也允许函数内部执行一些非函数式的操作，只要这些操作的结果不会暴露给系统中的其他部分。作为函数式的程序，你的函数或方法调用的库函数如果有副作用，你必须设法隐藏它们的非函数式行为，否则就不能调用这些方法。</li>
<li>被称为“函数式”的函数或方法都只能修改本地变量。除此之外，它引用的对象都应该是不可修改的对象。</li>
<li>要被称为函数式，函数或者方法不应该抛出任何异常。旦抛出异常，就意味着结果被终止了；不再像我们之前讨论的黑盒模式那样，由return返回一个恰当的结果值。 —— 请使用Optional类型</li>
<li>Optional类：它是一个容器对象，可以包含，也可以不包含一个值。Optional中有方法来明确处理值不存在的情况，这样就可以避免NullPointer异常了。</li>
</ul>]]></description></item><item><title>🚩Java 基础</title><link>https://leni.fun/java_base/</link><pubDate>Tue, 08 Aug 2023 15:09:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/java_base/</guid><description>学习 Java 必须掌握的基础知识</description></item><item><title>🚩JVM与GC</title><link>https://leni.fun/jvm%E4%B8%8Egc/</link><pubDate>Tue, 08 Aug 2023 14:52:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/jvm%E4%B8%8Egc/</guid><description>Java 进阶必经之路</description></item><item><title>🚩JUC</title><link>https://leni.fun/juc/</link><pubDate>Tue, 08 Aug 2023 14:46:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/juc/</guid><description>&lt;blockquote>
&lt;p>JUC = java.util.concurrent&lt;/p>
&lt;/blockquote></description></item><item><title>🚩JUC 经典代码</title><link>https://leni.fun/juc-%E7%BB%8F%E5%85%B8%E4%BB%A3%E7%A0%81/</link><pubDate>Tue, 08 Aug 2023 14:46:51 +0800</pubDate><author>都将会</author><guid>https://leni.fun/juc-%E7%BB%8F%E5%85%B8%E4%BB%A3%E7%A0%81/</guid><description>学习 JUC 不得不掌握的代码...</description></item><item><title>ChatGPT 说 Java 源码应该这样读</title><link>https://leni.fun/java_code_gpt/</link><pubDate>Mon, 07 Aug 2023 16:40:39 +0800</pubDate><author>都将会</author><guid>https://leni.fun/java_code_gpt/</guid><description>在 gpt 面前就 stay foolish 吧</description></item></channel></rss>